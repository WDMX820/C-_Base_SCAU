/*
提示：
   储蓄账户一年算一次利息，而信用账户一月算一次利息。
   而使用基类指针来调用settle函数时，事先并不知道该指针所指向对象的具体类型，无法决定采用何种方式调用settle函数，因此只能将二者允许接收的参数统一为每月1日。
   同时对储蓄账户的settle函数进行修改，使它在结算利息之前先判断是否为1月，只有参数所给的日期是1月时才进行结算。
*/



//编写：主函数文件 面向对象程序设计.cpp
#include<iostream>
#include<string.h>
#include"date.h"
#include"account.h"
using namespace std;
double Account::total = 0;
int main()
{
    Date d01(2020, 11, 5), d02(2020, 12, 5), d11(2020, 11, 25), d12(2020, 12, 20), d2(2021, 1, 1), dc1(2020, 11, 15), dc2(2020, 12, 1);
    Account* ptr;           //定义基类指针
    cout << "====================================" << "账户s0相关信息" << "====================================" << endl;
    //定义账户s0，年利率1.5%，在2020年11月1日创建账户
    //s0在2020年11月5日和2020年12月5日分别存入5000元和5500元
    SavingsAccount s0(2020, 11, 1, 202003919, 0, 0.015);
    ptr = &s0;                //基类指针调用
    ptr->deposit(d01, 5000);
    ptr->deposit(d02, 5500);
    ptr->settle(d2);
    d2.show();
    ptr->show();
    cout << "====================================" << "账户s1相关信息" << "====================================" << endl;
    //定义账户s1，年利率1.5%，在2020年11月1日创建账户
    //s1在2020年11月25日和2020年12月20日分别存入10000元和取出4000元
    SavingsAccount s1(2020, 11, 1, 202003942, 0, 0.015);
    ptr = &s1;
    ptr->deposit(d11, 10000);
    ptr->withdraw(d12, 4000);
    ptr->settle(d2);
    d2.show();
    ptr->show();
    cout << "====================================" << "账户c0相关信息" << "====================================" << endl;
    //定义信用账户c0，信用额度1万元，年费50元，日利率0.05%，在2020年11月1日创建账户
    //c0在2020年11月15日和2020年12月1日分别取出2000元和还清欠款
    CreditAccount c0(2020, 11, 1, 202003917, 0, 10000, 0.0005, 50);
    ptr = &c0;
    ptr->deposit(dc1, 2000);
    ptr->withdraw(dc2, 2000);
    ptr->withdraw(dc2, -c0.getDebt(dc2));    //结算利息
    ptr->settle(d2);
    d2.show();
    ptr->show();
    cout << "=====================================" << "所有账户总金额" << "===================================" << endl;
    d2.show();
    ptr->getTotal();
    cout << "======================================================================================" << endl;
}
